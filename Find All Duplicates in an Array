Find All Duplicates in an Array
Given an integer array nums of length n where all the integers of nums are in the range [1, n] and each integer appears once or twice.

Return an array of all the integers that appears twice.

You must write an algorithm that runs in O(n) time and uses only constant extra space.

Input Format
The first line contains a single integer n (size of the array)

Second line contains n-spaced integers representing the array

Output Format
Print all the elements that appear twice in a sorted manner

Example 1
Input

8
4 3 2 7 8 2 3 1
Output

2 3
Explanation

2 and 3 are only the elements that are repeated twice

Example 2
Input

3
1 1 2
Output

1
Explanation

Only 1 is repeated twice

Constraints
1 <= n <= 10^5

0 <= arr[i] <= 10^9

Topics


import java.util.*;

class Solution {
    public void allDuplicates(int n, int[] arr) {
        // Write Your code here.
        for(int i=0;i<n;i++){
            for(int j=0;j<n-1;j++){
                if(arr[j]>arr[j+1]){
                    int temp=arr[j];
                    arr[j]=arr[j+1];
                    arr[j+1]=temp;
                }
            }
            
        }
        int dup=0;
        for(int i=0;i<n-1;i++){
            if(arr[i]==arr[i+1]){
             System.out.print(arr[i]+" ");
            }
        }
        
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for (int i = 0; i < n; i++)
            arr[i] = sc.nextInt();
        Solution Obj = new Solution();
        Obj.allDuplicates(n, arr);
        sc.close();
    }
}
